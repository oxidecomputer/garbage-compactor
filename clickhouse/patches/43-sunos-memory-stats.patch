From 5b9c84c16fceab42bd1657579c0e274360d38a74 Mon Sep 17 00:00:00 2001
From: Alex Wilson <alex@cooperi.net>
Date: Mon, 12 Jun 2023 13:56:34 +1000
Subject: [PATCH 42/42] 44-sunos-memory-stats.patch

---
 src/Common/MemoryStatisticsOS.cpp        | 51 +++++++++++++++++++++++-
 src/Common/MemoryStatisticsOS.h          |  5 ++-
 src/Interpreters/AsynchronousMetrics.cpp |  6 ++-
 src/Interpreters/AsynchronousMetrics.h   |  2 +-
 4 files changed, 59 insertions(+), 5 deletions(-)

diff --git a/src/Common/MemoryStatisticsOS.cpp b/src/Common/MemoryStatisticsOS.cpp
index 22f8446121..338fab9289 100644
--- a/src/Common/MemoryStatisticsOS.cpp
+++ b/src/Common/MemoryStatisticsOS.cpp
@@ -1,7 +1,8 @@
-#if defined(OS_LINUX) || defined(OS_FREEBSD)
+#if defined(OS_LINUX) || defined(OS_FREEBSD) || defined(OS_SUNOS)
 
 #include <sys/types.h>
 #include <sys/stat.h>
+
 #if defined(OS_FREEBSD)
 #include <sys/sysctl.h>
 #include <sys/user.h>
@@ -18,6 +19,10 @@
 #include <IO/ReadBufferFromMemory.h>
 #include <IO/ReadHelpers.h>
 
+#if defined(OS_SUNOS)
+#include <libproc.h>
+#undef C2
+#endif
 
 namespace DB
 {
@@ -156,6 +161,50 @@ MemoryStatisticsOS::Data MemoryStatisticsOS::get() const
 
 #endif
 
+#if defined(OS_SUNOS)
+
+namespace ErrorCodes
+{
+    extern const int FILE_DOESNT_EXIST;
+    extern const int CANNOT_OPEN_FILE;
+    extern const int CANNOT_READ_FROM_FILE_DESCRIPTOR;
+}
+
+MemoryStatisticsOS::MemoryStatisticsOS()
+{
+    pid_t self = ::getpid();
+    char fname[PATH_MAX];
+
+    (void) ::snprintf(fname, sizeof (fname), "/proc/%d/psinfo", self);
+    psinfo_fd = ::open(fname, O_RDONLY | O_CLOEXEC);
+    if (-1 == psinfo_fd) {
+        throwFromErrno("Cannot open file " + std::string(fname), errno == ENOENT ? ErrorCodes::FILE_DOESNT_EXIST : ErrorCodes::CANNOT_OPEN_FILE);
+    }
+}
+
+MemoryStatisticsOS::~MemoryStatisticsOS()
+{
+    ::close(psinfo_fd);
+}
+
+MemoryStatisticsOS::Data MemoryStatisticsOS::get() const
+{
+    Data data;
+    psinfo_t ps;
+    int rc;
+
+    rc = ::pread(psinfo_fd, &ps, sizeof (ps), 0);
+    if (rc < 0)
+        throwFromErrno("Cannot read from psinfo fd", ErrorCodes::CANNOT_READ_FROM_FILE_DESCRIPTOR);
+
+    data.virt = ps.pr_size * 1024;
+    data.resident = ps.pr_rssize * 1024;
+
+    return data;
+}
+
+#endif
+
 }
 
 #endif
diff --git a/src/Common/MemoryStatisticsOS.h b/src/Common/MemoryStatisticsOS.h
index 43f3fdf2f2..5756bb4dff 100644
--- a/src/Common/MemoryStatisticsOS.h
+++ b/src/Common/MemoryStatisticsOS.h
@@ -1,5 +1,5 @@
 #pragma once
-#if defined(OS_LINUX) || defined(OS_FREEBSD)
+#if defined(OS_LINUX) || defined(OS_FREEBSD) || defined(OS_SUNOS)
 #include <cstdint>
 #if defined(OS_FREEBSD)
 #include <unistd.h>
@@ -47,6 +47,9 @@ private:
     int pagesize;
     pid_t self;
 #endif
+#if defined(OS_SUNOS)
+    int psinfo_fd;
+#endif
 };
 
 }
diff --git a/src/Interpreters/AsynchronousMetrics.cpp b/src/Interpreters/AsynchronousMetrics.cpp
index f9bc22dd11..fbfee10146 100644
--- a/src/Interpreters/AsynchronousMetrics.cpp
+++ b/src/Interpreters/AsynchronousMetrics.cpp
@@ -656,17 +656,19 @@ void AsynchronousMetrics::update(std::chrono::system_clock::time_point update_ti
     }
 
     /// Process process memory usage according to OS
-#if defined(OS_LINUX) || defined(OS_FREEBSD)
+#if defined(OS_LINUX) || defined(OS_FREEBSD) || defined(OS_SUNOS)
     {
         MemoryStatisticsOS::Data data = memory_stat.get();
 
         new_values["MemoryVirtual"] = data.virt;
         new_values["MemoryResident"] = data.resident;
-#if !defined(OS_FREEBSD)
+#if !defined(OS_FREEBSD) && !defined(OS_SUNOS)
         new_values["MemoryShared"] = data.shared;
 #endif
+#if !defined(OS_SUNOS)
         new_values["MemoryCode"] = data.code;
         new_values["MemoryDataAndStack"] = data.data_and_stack;
+#endif
 
         /// We must update the value of total_memory_tracker periodically.
         /// Otherwise it might be calculated incorrectly - it can include a "drift" of memory amount.
diff --git a/src/Interpreters/AsynchronousMetrics.h b/src/Interpreters/AsynchronousMetrics.h
index e4bcb2890f..ed82303379 100644
--- a/src/Interpreters/AsynchronousMetrics.h
+++ b/src/Interpreters/AsynchronousMetrics.h
@@ -76,7 +76,7 @@ private:
     bool first_run = true;
     std::chrono::system_clock::time_point previous_update_time;
 
-#if defined(OS_LINUX) || defined(OS_FREEBSD)
+#if defined(OS_LINUX) || defined(OS_FREEBSD) || defined(OS_SUNOS)
     MemoryStatisticsOS memory_stat;
 #endif
 
-- 
2.40.1

